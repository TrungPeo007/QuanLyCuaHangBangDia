/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import businessLayer.BangDiaBL;
import businessLayer.ThongTinBaiHatBL;
import dataTransferObject.BangDia;
import dataTransferObject.ThongTinBaiHat;
import dataTransferObject.ThongTinPhim;
import businessLayer.ThongTinPhimBL;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mhuy2
 */
public class FrmQuanLyBangDia extends javax.swing.JFrame {

    /**
     * Creates new form FrmQuanLyBangDia
     */
    public FrmQuanLyBangDia() {
        initComponents();
        initBangDia();
    }

DefaultTableModel model;
    void initBangDia()
    {
        List<BangDia> listBD;
       listBD=BangDiaBL.dsBangDia();
        if(listBD.size()>0)
        {
            model=(DefaultTableModel)tblThongTinBD.getModel();
            for(BangDia bd:listBD)
            {
               
                model.addRow(new Object[]{bd.getStrMaBD(),bd.getStrTen(),bd.getStrLoaiDia(),bd.getStrNuocSX(),bd.getIntNamSX(),bd.getIntSL(),bd.getDbGia()});
            }
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        poptable = new javax.swing.JPopupMenu();
        btnXem = new javax.swing.JMenuItem();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongTinBD = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMaBD = new javax.swing.JTextField();
        txtNuoc = new javax.swing.JTextField();
        txtNSX = new javax.swing.JTextField();
        txtSL = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        cboChon = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        btnXem.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnXem.setText("Xem thông tin bên trong băng đĩa");
        btnXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemActionPerformed(evt);
            }
        });
        poptable.add(btnXem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý băng đĩa");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 51));
        jLabel3.setText("-Nếu loại đĩa là \"Băng Cassette\" hoặc \"Đĩa CD\" thì sẽ hiện thông tin băng đĩa đó chứa gồm những bài hát gì.");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 51));
        jLabel4.setText("-Click vào 1 dòng trong bảng,sau đó click chuột phải 2 lần để xem thông tin bên trong băng đĩa.");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setText("-Nếu loại đĩa là \"Băng Video\" hoặc \"Đĩa VCD\" thì sẽ hiện thông tin băng đĩa đó chứa gồm những bộ phim gì.");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 550, 110, -1));

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modify.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 550, 110, -1));

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 550, 110, -1));

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add-icon .png"))); // NOI18N
        btnThem.setText("Làm mới");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 110, -1));

        btnLuu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sua.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        getContentPane().add(btnLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 550, 110, -1));

        tblThongTinBD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã băng đĩa", "Tên băng đĩa", "Loại đĩa", "Nước sản xuất", "Năm sản xuát", "Số lượng", "Giá thuê/ngày"
            }
        ));
        tblThongTinBD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinBDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblThongTinBD);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 790, 150));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin băng đĩa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 153))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Mã băng đĩa:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 30));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Số lượng:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, -1, 30));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Năm sản xuất:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, -1, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Loại đĩa:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Nước sản xuất:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, 30));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Giá thuê/ngày:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, -1, 30));

        txtMaBD.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel2.add(txtMaBD, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 240, 30));

        txtNuoc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel2.add(txtNuoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 220, 30));

        txtNSX.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtNSX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNSXKeyTyped(evt);
            }
        });
        jPanel2.add(txtNSX, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 219, 30));

        txtSL.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSLKeyTyped(evt);
            }
        });
        jPanel2.add(txtSL, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 219, 30));

        txtGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGiaKeyTyped(evt);
            }
        });
        jPanel2.add(txtGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 220, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Tên băng đĩa:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 67, -1, 30));

        txtTen.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel2.add(txtTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 240, 30));

        cboChon.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cboChon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------------Chọn------------", "Băng Video", "Đĩa VCD", "Băng Cassette", "Đĩa CD" }));
        cboChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChonActionPerformed(evt);
            }
        });
        jPanel2.add(cboChon, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 240, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 790, 200));

        jLabel2.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("QUẢN LÝ BĂNG ĐĨA");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background .jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents
void ResetAll()
{
    cboChon.setEnabled(true);
    btnLuu.setEnabled(true);
    txtMaBD.setEnabled(true);
    txtMaBD.setText("");
    txtTen.setText("");
    cboChon.setSelectedItem("------------Chọn------------");
    txtNuoc.setText("");
    txtNSX.setText("");
    txtSL.setText("");
    txtGia.setText("");
    tblThongTinBD.clearSelection();
    btnXoa.setEnabled(false);
    btnSua.setEnabled(false);
}
    private void cboChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboChonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        FrmMain all=new FrmMain();
        all.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (txtTen.getText().equals(""))
       {
           JOptionPane.showMessageDialog(this, "Vui lòng nhập tên băng đĩa! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtTen.requestFocus();
       }
        else if(cboChon.getSelectedItem().equals("------------Chọn------------"))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn loại đĩa !","Thông báo",JOptionPane.WARNING_MESSAGE);
            cboChon.requestFocus();   
       }
       else if(txtNuoc.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập nước sản xuất!","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtNuoc.requestFocus();   
       }
         else if(txtNSX.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập năm sản xuất!","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtNuoc.requestFocus();   
       }
       else if(txtNSX.getText().length()!=4)
       {
            JOptionPane.showMessageDialog(this, "Năm sản xuất phải nhập đúng định dạng yyyy!","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtNSX.requestFocus();    
       }
    
       else if(txtSL.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtSL.requestFocus();     
       }
      
       else if(txtGia.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá thuê! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtGia.requestFocus();     
       }
         else
          {
       String MaBD=txtMaBD.getText();
     String ten=txtTen.getText();
     String LoaiDia=cboChon.getSelectedItem().toString();
     String NuocSX=txtNuoc.getText();
     int NamSX=Integer.parseInt(txtNSX.getText());
     int SoLuong=Integer.parseInt(txtSL.getText());
     double Giathue=Double.parseDouble(txtGia.getText());
     BangDiaBL.SuaBD(MaBD,ten,LoaiDia,NuocSX,NamSX,SoLuong,Giathue);
      int tb=JOptionPane.showConfirmDialog(this, "Bạn muốn sửa lại băng đĩa "+txtTen.getText()+" chứ ?","Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(tb==JOptionPane.YES_OPTION)
        {
        JOptionPane.showMessageDialog(rootPane,"Sửa thành công");
        model =(DefaultTableModel)tblThongTinBD.getModel();
        model.setRowCount(0);
        initBangDia(); 
        ResetAll();
         }    
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
    ResetAll();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed

      String ma=txtMaBD.getText();
        BangDiaBL kh=new BangDiaBL();
         BangDia a=kh.checkMaBD(txtMaBD.getText());
      if(txtMaBD.getText().equals(""))
       {
           JOptionPane.showMessageDialog(this, "Vui lòng nhập mã băng đĩa! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtMaBD.requestFocus();
       }
          else if(!ma.matches("BD[0-9]{3}"))
     {
          JOptionPane.showMessageDialog(this, "Mã băng đĩa phải định dạng BDxxx!.\nVí dụ BD001","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtMaBD.requestFocus();
     }
          else if(a!=null)
         {
             JOptionPane.showMessageDialog(null, "Mã băng đĩa này đã tồn tại vui lòng chọn mã khác ","Thông báo",JOptionPane.WARNING_MESSAGE);
              txtMaBD.requestFocus();
                
         }
       else if(txtTen.getText().equals(""))
       {
           JOptionPane.showMessageDialog(this, "Vui lòng nhập tên băng đĩa! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtTen.requestFocus();
       }
        else if(cboChon.getSelectedItem().equals("------------Chọn------------"))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn loại đĩa !","Thông báo",JOptionPane.WARNING_MESSAGE);
            cboChon.requestFocus();   
       }
       else if(txtNuoc.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập nước sản xuất!","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtNuoc.requestFocus();   
       }
         else if(txtNSX.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập năm sản xuất!","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtNuoc.requestFocus();   
       }
       else if(txtNSX.getText().length()!=4)
       {
            JOptionPane.showMessageDialog(this, "Năm sản xuất phải nhập đúng định dạng yyyy!","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtNSX.requestFocus();    
       }
    
       else if(txtSL.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtSL.requestFocus();     
       }
      
       else if(txtGia.getText().equals(""))
       {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Giá thuê! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtGia.requestFocus();     
       }
    
     else
       {
        String MaBD=txtMaBD.getText();
     String ten=txtTen.getText();
     String LoaiDia=cboChon.getSelectedItem().toString();
     String NuocSX=txtNuoc.getText();
     int NamSX=Integer.parseInt(txtNSX.getText());
     int SoLuong=Integer.parseInt(txtSL.getText());
     double Giathue=Double.parseDouble(txtGia.getText());
       BangDia b=new BangDia(MaBD,ten,LoaiDia,NuocSX,NamSX,SoLuong,Giathue);
      
     int smt= BangDiaBL.themBangDia(b);
     if(smt>0)
     {
        JOptionPane.showMessageDialog(rootPane, "Lưu băng đĩa "+txtTen.getText()+" thành công");
        model =(DefaultTableModel)tblThongTinBD.getModel();
        model.setRowCount(0);
        initBangDia();
        ResetAll();
     }
     else
        JOptionPane.showMessageDialog(rootPane,"Lưu không thành công","Thông báo",JOptionPane.WARNING_MESSAGE);
    }  
    }//GEN-LAST:event_btnLuuActionPerformed

    private void tblThongTinBDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinBDMouseClicked
        int row=tblThongTinBD.getSelectedRow();
        if(row>-1)
        {
            
        cboChon.setEnabled(false);
        btnLuu.setEnabled(false);
        txtMaBD.setEnabled(false);
        btnXoa.setEnabled(true);
        btnSua.setEnabled(true);
        txtMaBD.setText(String.valueOf(model.getValueAt(tblThongTinBD.getSelectedRow(),0)));
        txtTen.setText(String.valueOf(model.getValueAt(tblThongTinBD.getSelectedRow(),1)));
        cboChon.setSelectedItem(String.valueOf(model.getValueAt(tblThongTinBD.getSelectedRow(),2)));
        txtNuoc.setText(String.valueOf(model.getValueAt(tblThongTinBD.getSelectedRow(),3)));
        txtNSX.setText(String.valueOf(model.getValueAt(tblThongTinBD.getSelectedRow(),4)));
        txtSL.setText(String.valueOf(model.getValueAt(tblThongTinBD.getSelectedRow(),5)));
        txtGia.setText(String.valueOf(model.getValueAt(tblThongTinBD.getSelectedRow(),6)));
        if(evt.getClickCount()==2 )
            {
                poptable.show(this,200,400+(tblThongTinBD.getSelectedRow()));
            }
        }
        else
          JOptionPane.showMessageDialog(rootPane,"Vui lòng click vào 1 dòng!","Thông báo",JOptionPane.WARNING_MESSAGE);
            
           
           
            
    }//GEN-LAST:event_tblThongTinBDMouseClicked

    private void txtNSXKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNSXKeyTyped
        char c=evt.getKeyChar();
            if(!Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_txtNSXKeyTyped

    private void txtSLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSLKeyTyped
       char c=evt.getKeyChar();
            if(!Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_txtSLKeyTyped

    private void txtGiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiaKeyTyped
       char c=evt.getKeyChar();
            if(!Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_txtGiaKeyTyped

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
          int tb=JOptionPane.showConfirmDialog(this,"Bạn có muốn xóa băng đĩa "+txtTen.getText()+" không?","Thông báo",JOptionPane.YES_NO_OPTION);
          if(tb==JOptionPane.YES_OPTION)
          {
               JOptionPane.showMessageDialog(rootPane,"Đã xóa thành công");
              BangDiaBL.XoaBD(txtMaBD.getText());
              model =(DefaultTableModel)tblThongTinBD.getModel();
            model.setRowCount(0);
            initBangDia();
            ResetAll();
          }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemActionPerformed
   if(cboChon.getSelectedItem().equals("Băng Cassette")||cboChon.getSelectedItem().equals("Đĩa CD"))
           {
               
        List<ThongTinBaiHat>listBH;
       String maString=txtMaBD.getText();
       listBH=ThongTinBaiHatBL.dsBH(maString);
        
              FrmThongTinBangDiaChuaBaiHat bhBaiHat=new FrmThongTinBangDiaChuaBaiHat();
              bhBaiHat.txtMaBD1.setText(txtMaBD.getText());
              bhBaiHat.lbltieude.setText("Thông tin bài hát của băng đĩa "+txtTen.getText());
              DefaultTableModel model2=(DefaultTableModel)bhBaiHat.tblBaiHat.getModel();
         
            for(ThongTinBaiHat bh:listBH)
            {
               
                model2.addRow(new Object[]{bh.getID(),bh.getStrTenBai(),bh.getStrCaSi(),bh.getStrNhacSi(),bh.getStrMaBD()});
            }
        bhBaiHat.setVisible(true);
      this.dispose();
           }
   if(cboChon.getSelectedItem().equals("Băng Video")||cboChon.getSelectedItem().equals("Đĩa VCD"))
   {
           List<ThongTinPhim>listPhim;
       String maString=txtMaBD.getText();
       listPhim=ThongTinPhimBL.dsPhim(maString);
       
              FrmThongTinBangDiaChuaPhim ttp=new FrmThongTinBangDiaChuaPhim();
              ttp.txtMaBD2.setText(txtMaBD.getText());
              ttp.lbltieude.setText("Thông tin phim của băng đĩa "+txtTen.getText());
              DefaultTableModel model3=(DefaultTableModel)ttp.tblPhim.getModel();
         
            for(ThongTinPhim p:listPhim)
            {
               
                model3.addRow(new Object[]{p.getID(),p.getStrTenPhim(),p.getStrDienVien(),p.getStrDaoDien(),p.getStrMaBD()});
            }
        ttp.setVisible(true);
      this.dispose();
   }
    }//GEN-LAST:event_btnXemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmQuanLyBangDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmQuanLyBangDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmQuanLyBangDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmQuanLyBangDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmQuanLyBangDia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JMenuItem btnXem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboChon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu poptable;
    private javax.swing.JTable tblThongTinBD;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaBD;
    private javax.swing.JTextField txtNSX;
    private javax.swing.JTextField txtNuoc;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
