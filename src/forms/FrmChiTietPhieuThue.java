/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import businessLayer.BangDiaBL;
import businessLayer.ChiTietPhieuThueBL;
import businessLayer.KhachHangBL;
import businessLayer.NhanVienBL;
import businessLayer.PhieuThueBL;
import dataTransferObject.BangDia;
import dataTransferObject.ChiTietPhieuThue;
import dataTransferObject.KhachHang;
import dataTransferObject.NhanVien;
import dataTransferObject.PhieuThue;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author mhuy2
 */
public class FrmChiTietPhieuThue extends javax.swing.JFrame {

    /**
     * Creates new form FrmPhieuThue
     */
    public FrmChiTietPhieuThue() {
        initComponents();
        initMaBD();
        initCTPT();
        
    }
    DefaultTableModel model;
 void initCTPT()
  {
       List<ChiTietPhieuThue>listCTPT;
       String maString=txtMaPT1.getText();
       listCTPT=ChiTietPhieuThueBL.dsCTPT(maString);

           model=(DefaultTableModel)tblThongTin.getModel();
         
             for(ChiTietPhieuThue ct:listCTPT)
            {
               
                model.addRow(new Object[]{ct.getStrMaBD(),ct.getStrTenBD(),ct.getIntSL(),ct.getDbDonGia(),ct.getFltGiamGia(),ct.getDbThanhTien()});
            
            }
  }
void initMaBD()
{
    List<BangDia>listBD;
    listBD=BangDiaBL.dsBangDia();
    if(listBD.size()>0)
    {
        for(BangDia a:listBD)
        {
            cboMaBD.addItem(String.valueOf(a.getStrMaBD()));
        }
    }
}
private void initTenBD()
{
    List<ChiTietPhieuThue>listBD;
   String ma=cboMaBD.getSelectedItem().toString();
    listBD=ChiTietPhieuThueBL.HienThiTenBD(ma);
    if(listBD.size()>0)
    {
       
        for(ChiTietPhieuThue nv:listBD)
        {
           
            txtTenBD.setText(nv.getStrTenBD());
            lblTieuDeSL.setText("Số lượng chỉ còn:");
            lblSL.setText(String.valueOf(nv.getIntSL()));
            txtDonGia.setText(String.valueOf(nv.getDbDonGia()));
        }
    }
}
void ResetAll()
{
    txtTongTien.setText("0");
    cboMaBD.setEnabled(true);
    cboMaBD.setSelectedItem("---Chọn---");
    txtGiamGia.setText("");
    txtThanhTien.setText("0");
    txtSL.setText("");
    tblThongTin.clearSelection();
    btnXoa.setEnabled(false);
    btnSua.setEnabled(false);
    btnLuu.setEnabled(true);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHoanThanh = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnTinhTongTien = new javax.swing.JButton();
        txtTongTien = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThongTin = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cboMaBD = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        btnTinhThanhTien = new javax.swing.JButton();
        txtThanhTien = new javax.swing.JTextField();
        txtTenBD = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtGiamGia = new javax.swing.JTextField();
        lblTieuDeSL = new javax.swing.JLabel();
        lblSL = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtThoiHan = new javax.swing.JTextField();
        txtMaPT1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chi tiết phiếu thuê");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnHoanThanh.setBackground(new java.awt.Color(204, 204, 255));
        btnHoanThanh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHoanThanh.setText("Hoàn thành");
        btnHoanThanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoanThanhActionPerformed(evt);
            }
        });
        getContentPane().add(btnHoanThanh, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, 110, 40));

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modify.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 490, 110, -1));

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 490, 110, -1));

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add-icon .png"))); // NOI18N
        btnThem.setText("Làm mới");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 110, -1));

        btnLuu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sua.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        getContentPane().add(btnLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 490, 110, -1));

        btnTinhTongTien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTinhTongTien.setText("Tính ");
        btnTinhTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhTongTienActionPerformed(evt);
            }
        });
        getContentPane().add(btnTinhTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 440, 70, 30));

        txtTongTien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTongTien.setText("0");
        txtTongTien.setEnabled(false);
        getContentPane().add(txtTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 440, 180, 30));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Ngày");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 400, 40, 30));

        tblThongTin.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã băng đĩa", "Tên băng đĩa", "Số lượng", "Đơn giá/ngày", "Giảm giá %", "Thành tiền"
            }
        ));
        tblThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblThongTin);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 770, 120));

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin băng đĩa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 51, 153))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Số lượng:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, -1, 30));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Tên băng đĩa:");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, 30));

        cboMaBD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboMaBD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Chọn---" }));
        cboMaBD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaBDItemStateChanged(evt);
            }
        });
        cboMaBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMaBDActionPerformed(evt);
            }
        });
        jPanel4.add(cboMaBD, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 120, 30));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Mã băng đĩa:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 17, -1, 30));

        btnTinhThanhTien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTinhThanhTien.setText("Tính ");
        btnTinhThanhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhThanhTienActionPerformed(evt);
            }
        });
        jPanel4.add(btnTinhThanhTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 100, 70, 30));

        txtThanhTien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtThanhTien.setText("0");
        txtThanhTien.setEnabled(false);
        txtThanhTien.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtThanhTienInputMethodTextChanged(evt);
            }
        });
        txtThanhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThanhTienActionPerformed(evt);
            }
        });
        txtThanhTien.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtThanhTienPropertyChange(evt);
            }
        });
        jPanel4.add(txtThanhTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 210, 30));

        txtTenBD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTenBD.setEnabled(false);
        txtTenBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenBDActionPerformed(evt);
            }
        });
        jPanel4.add(txtTenBD, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 220, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Giảm giá %:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, 30));

        txtSL.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSL.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                txtSLMouseMoved(evt);
            }
        });
        txtSL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSLFocusLost(evt);
            }
        });
        txtSL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtSLMouseEntered(evt);
            }
        });
        txtSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSLActionPerformed(evt);
            }
        });
        txtSL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSLKeyTyped(evt);
            }
        });
        jPanel4.add(txtSL, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 100, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Thành tiền:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, -1, 30));

        txtDonGia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtDonGia.setEnabled(false);
        jPanel4.add(txtDonGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 120, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Đơn giá/ngày:");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 30));

        txtGiamGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtGiamGia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGiamGiaFocusLost(evt);
            }
        });
        txtGiamGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGiamGiaMouseClicked(evt);
            }
        });
        txtGiamGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiamGiaActionPerformed(evt);
            }
        });
        txtGiamGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGiamGiaKeyTyped(evt);
            }
        });
        jPanel4.add(txtGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 120, 30));

        lblTieuDeSL.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel4.add(lblTieuDeSL, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 140, 20));

        lblSL.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblSL.setForeground(new java.awt.Color(255, 0, 0));
        jPanel4.add(lblSL, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 50, 20));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 770, 140));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setText("Mã phiếu thuê:");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 30));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("Thời hạn trả:");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 400, 90, 30));

        txtThoiHan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtThoiHan.setEnabled(false);
        txtThoiHan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtThoiHanFocusLost(evt);
            }
        });
        txtThoiHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThoiHanActionPerformed(evt);
            }
        });
        txtThoiHan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtThoiHanKeyTyped(evt);
            }
        });
        getContentPane().add(txtThoiHan, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 400, 60, 30));

        txtMaPT1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaPT1.setEnabled(false);
        getContentPane().add(txtMaPT1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 220, 30));

        jLabel2.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText(" CHI TIẾT PHIẾU THUÊ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 210, 30));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Tổng tiền:");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, -1, 30));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 490, 110, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background .jpg"))); // NOI18N
        jLabel10.setText("jLabel10");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinMouseClicked
        int row=tblThongTin.getSelectedRow();
        if(row>-1)
        {
        btnXoa.setEnabled(true);
        btnSua.setEnabled(true);
        btnLuu.setEnabled(false);
        cboMaBD.setEnabled(false);
        cboMaBD.setSelectedItem(String.valueOf(model.getValueAt(tblThongTin.getSelectedRow(),0)));
        txtTenBD.setText(String.valueOf(model.getValueAt(tblThongTin.getSelectedRow(),1)));
        txtSL.setText(String.valueOf(model.getValueAt(tblThongTin.getSelectedRow(),2)));
        txtDonGia.setText(String.valueOf(model.getValueAt(tblThongTin.getSelectedRow(),3)));
        txtGiamGia.setText(String.valueOf(model.getValueAt(tblThongTin.getSelectedRow(),4)));
        txtThanhTien.setText(String.valueOf(model.getValueAt(tblThongTin.getSelectedRow(),5)));
        }
        else
        JOptionPane.showMessageDialog(rootPane,"Vui lòng click vào 1 dòng!","Thông báo",JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_tblThongTinMouseClicked

    private void btnHoanThanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoanThanhActionPerformed
        if(txtTongTien.getText().equals("0")||txtTongTien.getText().equals("")||txtTongTien.getText().equals("0.0"))
        {
             JOptionPane.showMessageDialog(this, "Vui lòng tính tổng tiền trước hoàn thành !","Thông báo",JOptionPane.WARNING_MESSAGE);
            btnTinhTongTien.requestFocus();
        } 
        else
        {
        int tb=JOptionPane.showConfirmDialog(this, "Bạn muốn chắc chắn muốn thanh toán chứ ?","Thông báo",JOptionPane.YES_NO_OPTION);
        if(tb==JOptionPane.YES_OPTION)
        {
        PhieuThueBL.CapNhatTongTien(Double.parseDouble(txtTongTien.getText()),txtMaPT1.getText());
        JOptionPane.showMessageDialog(this, "Thanh toán thành công  !");
        FrmPhieuThue all=new FrmPhieuThue();
        all.setVisible(true);
        this.dispose();
        }
        }
        
    }//GEN-LAST:event_btnHoanThanhActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if(txtSL.getText().equals("")||txtSL.getText().equals("0"))
        {
             JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtSL.requestFocus();
        }
        else if(Integer.parseInt(lblSL.getText())<Integer.parseInt(txtSL.getText()))
        {
            JOptionPane.showMessageDialog(this, "Số lượng chỉ còn "+lblSL.getText()+" không thê nhập số lượng cao hơn! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtSL.requestFocus();
        }
        else if(txtGiamGia.getText().equals(""))
        {
              JOptionPane.showMessageDialog(this, "Vui lòng nhập giảm giá hoặc để bằng 0! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtGiamGia.requestFocus();
        }
        else if(txtThanhTien.getText().equals("")||txtThanhTien.getText().equals("0"))
        {
             JOptionPane.showMessageDialog(this, "Vui lòng tính thành tiền! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            btnTinhThanhTien.requestFocus();
        }
        else
        {
        String MaPT=txtMaPT1.getText();
        String MaBD=cboMaBD.getSelectedItem().toString();
        int SL=Integer.parseInt(txtSL.getText());
        double Dongia=Double.parseDouble(txtDonGia.getText());
        float GiamGia=Float.parseFloat(txtGiamGia.getText());
        double ThanhTien=Double.parseDouble(txtThanhTien.getText());
        
        ChiTietPhieuThueBL.SuaCTPT(MaPT,MaBD,SL,Dongia,GiamGia,ThanhTien);
        int tb=JOptionPane.showConfirmDialog(this, "Bạn muốn sửa lại mã băng đĩa "+cboMaBD.getSelectedItem()+" chứ ?","Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(tb==JOptionPane.YES_OPTION)
        {
        JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
        int index=tblThongTin.getSelectedRow();
        int SLcon=0;
        int Soluong=Integer.parseInt(model.getValueAt(index,2).toString());
        if(Soluong<=SL)
        {
        SLcon=Integer.parseInt(lblSL.getText())-(SL-Soluong);
        }
        else
        {
        SLcon=Integer.parseInt(lblSL.getText())+(Soluong-SL);
        
        }
        BangDiaBL.CapNhatSLCon(MaBD,SLcon);
        model =(DefaultTableModel)tblThongTin.getModel();
        model.setRowCount(0);
        initCTPT();
        ResetAll();
        }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ResetAll();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
    String ma1=txtMaPT1.getText();
    String ma2=cboMaBD.getSelectedItem().toString();
     ChiTietPhieuThueBL pb=new  ChiTietPhieuThueBL();
        ChiTietPhieuThue s=pb.checkMaPTvaBD(ma1,ma2);
        if(cboMaBD.getSelectedItem().equals("---Chọn---"))
        {
             JOptionPane.showMessageDialog(null, "Vui chọn mã băng đĩa","Thông báo",JOptionPane.WARNING_MESSAGE);
              cboMaBD.requestFocus();
        }
        else if(s!=null)
       {
             JOptionPane.showMessageDialog(null, "Mã băng đĩa này đã có vui lòng chọn mã khác ","Thông báo",JOptionPane.WARNING_MESSAGE);
              cboMaBD.requestFocus();
                
        }
        else if(txtSL.getText().equals("")||txtSL.getText().equals("0"))
        {
             JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtSL.requestFocus();
        }
        else if(Integer.parseInt(lblSL.getText())<Integer.parseInt(txtSL.getText()))
        {
             JOptionPane.showMessageDialog(this, "Số lượng chỉ còn "+lblSL.getText()+" không thê nhập số lượng cao hơn! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtSL.requestFocus();
        }
        else if(txtGiamGia.getText().equals(""))
        {
              JOptionPane.showMessageDialog(this, "Vui lòng nhập giảm giá hoặc để bằng 0! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtGiamGia.requestFocus();
        }
        else if(Integer.parseInt(txtGiamGia.getText())>=100)
        {
            JOptionPane.showMessageDialog(this, "Giảm giá không được quá 100%! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtGiamGia.requestFocus();
        }
        else if(txtThanhTien.getText().equals("0")||txtThanhTien.getText().equals(""))
        {
             JOptionPane.showMessageDialog(this, "Vui lòng tính thành tiền! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            btnTinhThanhTien.requestFocus();
        }
        else
        {

        String MaPT=txtMaPT1.getText();
        String MaBD=cboMaBD.getSelectedItem().toString();
        int SL=Integer.parseInt(txtSL.getText());
        double Dongia=Double.parseDouble(txtDonGia.getText());
        float GiamGia=Float.parseFloat(txtGiamGia.getText());
        double ThanhTien=Double.parseDouble(txtThanhTien.getText());
        int SLcon=0;
        ChiTietPhieuThue a=new ChiTietPhieuThue(MaPT,MaBD,SL,Dongia,GiamGia,ThanhTien);
        int smt=ChiTietPhieuThueBL.themCTPT(a);
         if(smt>0)
         {
        JOptionPane.showMessageDialog(rootPane, "Lưu  "+cboMaBD.getSelectedItem()+" thành công");
        SLcon=Integer.parseInt(lblSL.getText())-SL;
        BangDiaBL.CapNhatSLCon(MaBD,SLcon);
        model =(DefaultTableModel)tblThongTin.getModel();
        model.setRowCount(0);
        initCTPT();
        ResetAll();
        }
         else
        JOptionPane.showMessageDialog(rootPane,"Lưu không thành công","Thông báo",JOptionPane.WARNING_MESSAGE);
        }
    
    }//GEN-LAST:event_btnLuuActionPerformed

    private void cboMaBDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaBDItemStateChanged
        initTenBD();
    }//GEN-LAST:event_cboMaBDItemStateChanged

    private void txtThanhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThanhTienActionPerformed
     
    }//GEN-LAST:event_txtThanhTienActionPerformed

    private void txtThanhTienPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtThanhTienPropertyChange
    
    }//GEN-LAST:event_txtThanhTienPropertyChange

    private void txtThanhTienInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtThanhTienInputMethodTextChanged
       
    }//GEN-LAST:event_txtThanhTienInputMethodTextChanged

    private void cboMaBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMaBDActionPerformed
        if(cboMaBD.getSelectedItem().equals("---Chọn---"))
        {
            txtTenBD.setText("");
            lblTieuDeSL.setText("");
            lblSL.setText("");
            txtDonGia.setText("");
        }        
    }//GEN-LAST:event_cboMaBDActionPerformed

    private void txtTenBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenBDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenBDActionPerformed

    private void btnTinhThanhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhThanhTienActionPerformed
        if(cboMaBD.getSelectedItem().equals("---Chọn---"))
        {
             JOptionPane.showMessageDialog(null, "Vui chọn mã băng đĩa trước khi tính thành tiền!","Thông báo",JOptionPane.WARNING_MESSAGE);
              cboMaBD.requestFocus();
        }

        else if(txtSL.getText().equals("")||txtSL.getText().equals("0"))
        {
              JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng trước khi tính thành tiền! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtSL.requestFocus();
        }
        else if(txtGiamGia.getText().equals(""))
        {
             JOptionPane.showMessageDialog(this, "Vui lòng nhập giảm giá hoặc để bằng 0 trước khi tính thành tiền! ","Thông báo",JOptionPane.WARNING_MESSAGE);
            txtGiamGia.requestFocus();
        }
        else
        {
        int SL=Integer.parseInt(txtSL.getText());
        double DonGia=Float.parseFloat(txtDonGia.getText());
        float giamgia=Float.parseFloat(txtGiamGia.getText());
        double tt=(SL*DonGia)*(100-giamgia)/100;
        String doikieuString=String.format("%.1f", tt);
        txtThanhTien.setText(doikieuString);
        }
    }//GEN-LAST:event_btnTinhThanhTienActionPerformed

    private void txtGiamGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiamGiaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtGiamGiaActionPerformed

    private void txtGiamGiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiamGiaKeyTyped
        char c=evt.getKeyChar();
            if(!Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_txtGiamGiaKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
           btnXoa.setEnabled(false);
        btnSua.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
          
        int tb=JOptionPane.showConfirmDialog(this,"Bạn có muốn xóa  mã băng đĩa "+cboMaBD.getSelectedItem()+" không?","Thông báo",JOptionPane.YES_NO_OPTION);
          if(tb==JOptionPane.YES_OPTION)
          {
            ChiTietPhieuThueBL.XoaCTPT(txtMaPT1.getText(),cboMaBD.getSelectedItem().toString());
              int SLcon=0;
            SLcon=Integer.parseInt(lblSL.getText())+Integer.parseInt(txtSL.getText());
            BangDiaBL.CapNhatSLCon(cboMaBD.getSelectedItem().toString(),SLcon);
            JOptionPane.showMessageDialog(rootPane,"Đã xóa thành công");
            model =(DefaultTableModel)tblThongTin.getModel();
            model.setRowCount(0);
            initCTPT();
            ResetAll();
          }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtSLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSLKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c))
        evt.consume();
    }//GEN-LAST:event_txtSLKeyTyped

    private void txtSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSLActionPerformed

    }//GEN-LAST:event_txtSLActionPerformed

    private void txtSLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSLFocusLost
      
    }//GEN-LAST:event_txtSLFocusLost

    private void txtGiamGiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiamGiaFocusLost
        
    }//GEN-LAST:event_txtGiamGiaFocusLost

    private void txtSLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSLMouseClicked
     txtThanhTien.setText("0");
    }//GEN-LAST:event_txtSLMouseClicked

    private void txtSLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSLMouseEntered
        
    }//GEN-LAST:event_txtSLMouseEntered

    private void txtSLMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSLMouseMoved
        
    }//GEN-LAST:event_txtSLMouseMoved

    private void btnTinhTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhTongTienActionPerformed
       
         double tong=0;
        for(int i=0;i<tblThongTin.getRowCount();i++)
        {
        tong=tong+Double.parseDouble(tblThongTin.getValueAt(i,5).toString())*Integer.parseInt(txtThoiHan.getText());
        }
         txtTongTien.setText(Double.toString(tong));
       
  
   
    }//GEN-LAST:event_btnTinhTongTienActionPerformed

    private void txtThoiHanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtThoiHanFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThoiHanFocusLost

    private void txtThoiHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThoiHanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThoiHanActionPerformed

    private void txtThoiHanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtThoiHanKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThoiHanKeyTyped

    private void txtGiamGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGiamGiaMouseClicked
        txtThanhTien.setText("0");
    }//GEN-LAST:event_txtGiamGiaMouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        FrmPhieuThue all=new FrmPhieuThue();
        all.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmChiTietPhieuThue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmChiTietPhieuThue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmChiTietPhieuThue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmChiTietPhieuThue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmChiTietPhieuThue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHoanThanh;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTinhThanhTien;
    private javax.swing.JButton btnTinhTongTien;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboMaBD;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSL;
    private javax.swing.JLabel lblTieuDeSL;
    public javax.swing.JTable tblThongTin;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtGiamGia;
    public javax.swing.JTextField txtMaPT1;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTenBD;
    private javax.swing.JTextField txtThanhTien;
    public javax.swing.JTextField txtThoiHan;
    public javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
